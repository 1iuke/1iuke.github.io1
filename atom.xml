<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mr.Liu</title>
  
  
  <link href="https://1iuke.github.io/atom.xml" rel="self"/>
  
  <link href="https://1iuke.github.io/"/>
  <updated>2021-09-01T03:22:51.433Z</updated>
  <id>https://1iuke.github.io/</id>
  
  <author>
    <name>刘 可</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用任务相关成分分析增强对高速脑拼写器的 SSVEP 检测</title>
    <link href="https://1iuke.github.io/2021/09/01/Paper/SSVEP/TRCA/"/>
    <id>https://1iuke.github.io/2021/09/01/Paper/SSVEP/TRCA/</id>
    <published>2021-09-01T01:50:47.000Z</published>
    <updated>2021-09-01T03:22:51.433Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="总结">0. 总结</h2><p>CovMax的计算要用到已有的trial数据，表明了TRCA需要受试者训练数据。我们利用受试者某一刺激n的训练数据，通过TRCA得到对应的空间滤波器<span class="math inline">\(W_n\)</span>；利用分<span class="math inline">\(W_n\)</span>别对test trial X和训练集平均信号<span class="math inline">\(\bar X\)</span>进行空间滤波；然后计算两者的皮尔逊相关系数；最后找到最大相关系数对应的刺激频率即可。多说一句，目前类别数较多时，SSVEP的识别主要是根据相关系数来的，各方法的改进之处在于如何找到一个更好的空间滤波器<span class="math inline">\(W_n\)</span>。</p><h2 id="研究目标">1. 研究目标</h2><p>提高SSVEP的检测性能</p><ul><li>提高刺激数 (120目标cVEP) （JFPM）</li><li>改进算法性能<ul><li>PSDA 单通道</li><li>CCA 提高SNR</li><li>CCA-based 使用个体校正数据减少自发背景脑电的影响<ul><li>MwayCCA</li><li>L1-MCCA</li><li>MsetCCA</li><li>extended-CCA</li></ul></li></ul></li></ul><h2 id="研究背景及问题陈述">2. 研究背景及问题陈述</h2><p>皮层脑电是多个电极的头皮 EEG 信号的加权线性总和</p><p>通过最大化跨试验的时间锁定活动的可重复性，TRCA 方法在提取任务相关组件方面表现出良好的性能。</p><h2 id="研究方法">3. 研究方法</h2><h3 id="extended-cca">1 extended-CCA</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210901102237074.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210901102311025.png"></p><h3 id="trca">2 TRCA</h3><p>一个多通道EEG信号的线性生成模型</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210901102444745.png"></p><p>其中 <span class="math inline">\(s(t)\)</span> 是任务相关成分，<span class="math inline">\(n(t)\)</span>是任务无关成分，<span class="math inline">\(j\)</span>是通道</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/20200418221837926.png"></p><p>不同trial中，<span class="math inline">\(s(t)\)</span>之间的协方差为正常数，<span class="math inline">\(n(t)\)</span>之间的协方差为0</p><p>问题是从观察信号 <span class="math inline">\(x(t)\)</span>的线性和中恢复与任务相关的组件<span class="math inline">\(s(t)\)</span></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210901103118943.png"></p><p>为了使<span class="math inline">\(y(t)=x(t)\)</span>,则 <span class="math display">\[\sum_{j=1}^{Nc}w_{j}a_{1,j}=1\]</span></p><p><span class="math display">\[\sum_{j=1}^{Nc}w_{j}a_{2,j}=0\]</span></p><p>试次间协方差</p><p>两个trial</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210901103819045.png"></p><p>所有trial</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210901103853511.png"></p><p><span class="math inline">\(S\)</span> 表示为</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210901103954600.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210901103914544.png"></p><p>为了获得有限解，<span class="math inline">\(y(t)\)</span> 的方差被约束为</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210901104132650.png"></p><p>约束优化问题可以求解为：</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210901104214145.png"></p><p>根据Rayleigh–Ritz理论:</p><p>​ 可以通过 <span class="math inline">\(Q^{-1}S\)</span>特征分解得到w</p><p>TRCA 使用最大特征值对应 的特征向量</p><p>Ensemble TRCA 使用所有的特征向量</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210901104512647.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210901101032700.png"></p><h2 id="结果">4. 结果</h2><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210901112249147.png"></p><h2 id="讨论">5. 讨论</h2><h2 id="笔记">6. 笔记</h2><h2 id="参考文献">参考文献</h2>]]></content>
    
    
    <summary type="html">Enhancing Detection of SSVEPs for a High-Speed Brain Speller Using Task-Related Component Analysis</summary>
    
    
    
    <category term="论文" scheme="https://1iuke.github.io/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="TRCA" scheme="https://1iuke.github.io/tags/TRCA/"/>
    
    <category term="SSVEP" scheme="https://1iuke.github.io/tags/SSVEP/"/>
    
  </entry>
  
  <entry>
    <title>算法总结</title>
    <link href="https://1iuke.github.io/2021/09/01/BCI/%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>https://1iuke.github.io/2021/09/01/BCI/%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/</id>
    <published>2021-09-01T00:22:35.000Z</published>
    <updated>2021-09-20T14:57:36.385Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li><p>无训练</p><ul><li>MEC</li><li>CCA</li><li>MSI</li><li>FBCCA</li><li>CVARS</li></ul></li><li><p>有训练</p><ul><li><p>TRCA (Nakanishi et al., 2018)</p></li><li><p>ms-eTRCA (Wong et al., 2020a)</p></li><li><p>extended-CCA</p></li><li><p>m-Extended CCA</p></li><li><p>L1MCCA</p></li><li><p>ITCCA</p></li><li><p>TDCA</p></li><li><p>TSTRCA</p></li></ul></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/202109202208987.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/202109202209325.png"></p>]]></content>
    
    
    <summary type="html">脑电解码算法</summary>
    
    
    
    <category term="脑机接口" scheme="https://1iuke.github.io/categories/%E8%84%91%E6%9C%BA%E6%8E%A5%E5%8F%A3/"/>
    
    
    <category term="CCA" scheme="https://1iuke.github.io/tags/CCA/"/>
    
    <category term="TRCA" scheme="https://1iuke.github.io/tags/TRCA/"/>
    
    <category term="SSVEP" scheme="https://1iuke.github.io/tags/SSVEP/"/>
    
    <category term="滤波器组" scheme="https://1iuke.github.io/tags/%E6%BB%A4%E6%B3%A2%E5%99%A8%E7%BB%84/"/>
    
    <category term="JFPM" scheme="https://1iuke.github.io/tags/JFPM/"/>
    
    <category term="TDCA" scheme="https://1iuke.github.io/tags/TDCA/"/>
    
    <category term="extended-CCA" scheme="https://1iuke.github.io/tags/extended-CCA/"/>
    
  </entry>
  
  <entry>
    <title>基于SSVEP的高速脑机接口拼写器</title>
    <link href="https://1iuke.github.io/2021/08/31/Paper/SSVEP/A-HIGH-SPEED-BRAIN-SPELLER-USING-STEADY-STATE-VISUAL-EVOKED-POTENTIALS/"/>
    <id>https://1iuke.github.io/2021/08/31/Paper/SSVEP/A-HIGH-SPEED-BRAIN-SPELLER-USING-STEADY-STATE-VISUAL-EVOKED-POTENTIALS/</id>
    <published>2021-08-31T15:06:37.000Z</published>
    <updated>2021-09-01T01:43:34.571Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="总结">0. 总结</h2><h2 id="研究目标">1. 研究目标</h2><p>本研究旨在探讨基于ssvep的BCI的通信速度限制</p><h2 id="研究背景及问题陈述">2. 研究背景及问题陈述</h2><p>基于SSVE的BCI性能取决于：</p><ul><li>刺激呈现<ul><li>屏幕刷新率限制<ul><li>通过在刺激周期中以可变帧数近似频率，可以产生一个灵活频率的视觉闪烁</li></ul></li></ul></li><li>多目标编码</li><li>目标识别</li></ul><h2 id="研究方法">3. 研究方法</h2><h3 id="贡献">贡献</h3><p>(1)一种频率和相位近似方法，用于绘制视觉闪烁，使用常规的监视器刷新率</p><p>(2)使用混合频率和相位编码方案的32目标拼写器设计;</p><p>(3)使用CCA与来自单个SSVEP训练数据的参考信号进行目标识别。</p><h2 id="信号特征分析">信号特征分析</h2><p>幅度</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210831231334826.png"></p><p>相位</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210831231340874.png"></p><p>相位差</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210831231350534.png"></p><p>响应延迟</p><p>通过测量相位作为刺激频率的函数来估计曲线的斜率</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210831231357740.png"></p><h2 id="目标识别算法">目标识别算法</h2><h3 id="cca">1 CCA</h3><h3 id="cca-with-ssvep-training-data">2 CCA with SSVEP training data</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210831231404966.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210831231413710.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210831231420894.png"></p><p>比较五种方法的性能</p><ol type="1"><li>标准CCA</li><li>测试集与训练参考的相关</li><li>测试集与正余弦参考的相关</li><li>训练参考与正余弦参考的相关</li><li>集成方法，结合1.2.3.4</li></ol><h2 id="实验">实验</h2><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210831231428818.png"></p><p>刺激：8到15间隔1Hz,相位90 180 270 360</p><p>latency 取120ms</p><p>谐波数N = 3</p><p>为避免过拟合，选取枕区8个电极</p><p>使用Oz电极的信号进行相位检测</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210831231436733.png"></p><p>M: 目标数</p><p>P: 准确率</p><p>T: 选择时间（注视时间加转移时间）</p><h2 id="结果">4. 结果</h2><h2 id="幅度相位潜伏期">幅度，相位，潜伏期</h2><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210831231454674.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210831231502944.png"></p><p>所有的频率相位模型曲线拟合为线性，说明潜伏期是一致的，平均在140ms</p><h2 id="离线分析">离线分析</h2><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210831231509912.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210831231518329.png"></p><p>平均ITR 166.91±18.50 bits/min</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210831231527894.png"></p><p>增加训练数据的trial的影响</p><h2 id="讨论">5. 讨论</h2><h2 id="笔记">6. 笔记</h2><h2 id="参考文献">参考文献</h2>]]></content>
    
    
    <summary type="html">A HIGH-SPEED BRAIN SPELLER USING STEADY-STATE VISUAL EVOKED POTENTIALS</summary>
    
    
    
    <category term="论文" scheme="https://1iuke.github.io/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="SSVEP" scheme="https://1iuke.github.io/tags/SSVEP/"/>
    
    <category term="JFPM" scheme="https://1iuke.github.io/tags/JFPM/"/>
    
    <category term="extended-CCA" scheme="https://1iuke.github.io/tags/extended-CCA/"/>
    
  </entry>
  
  <entry>
    <title>高频刺激SSVEP</title>
    <link href="https://1iuke.github.io/2021/08/31/Paper/SSVEP/%E9%AB%98%E9%A2%91%E5%88%BA%E6%BF%80SSVEP/"/>
    <id>https://1iuke.github.io/2021/08/31/Paper/SSVEP/%E9%AB%98%E9%A2%91%E5%88%BA%E6%BF%80SSVEP/</id>
    <published>2021-08-31T15:05:54.000Z</published>
    <updated>2021-08-31T15:09:08.375Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="总结">0. 总结</h2><h2 id="研究目标">1. 研究目标</h2><p>验证高频SSVEP系统可以实现与低频系统一样高的BCI精度，同时减少视觉不适</p><h2 id="研究背景及问题陈述">2. 研究背景及问题陈述</h2><p>SSVEP：</p><ul><li><p>稳态视觉诱发电位是当被试专注于特定频率的视觉闪烁刺激时，在枕区产生的同步脑电波。</p></li><li><p>通常需要很少或无训练就可以达到较高的ITR</p></li><li><p>响应频率[4,90]</p><ul><li>低频 &lt;20 幅度响应最高 视觉疲劳<br></li><li>高频 幅度响应较低，但SNR可能不会降低，眼球运动、头部运动和环境因素对外界噪声的影响较小</li></ul></li></ul><h2 id="研究方法">3. 研究方法</h2><p>构建了LED刺激键盘，使用低频[6 14.7]Hz和高频[26 34.7]Hz进行刺激。避免4-15Hz刺激引起的视觉疲劳和15-25Hz刺激引起的光敏性癫痫发作</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210831230833906.png"></p><p>使用multi-channel EEG 和 CCA</p><p>比较系统的分类准确度和受试者疲劳度</p><h2 id="结果">4. 结果</h2><p>高频SSVEP系统设计具有较高的准确性和较低的不适程度</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210831230851920.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210831230901328.png"></p><h2 id="讨论">5. 讨论</h2><h2 id="笔记">6. 笔记</h2><h2 id="参考文献">参考文献</h2>]]></content>
    
    
    <summary type="html">A BCI Speller based on SSVEP Using High Frequency Stimuli Design</summary>
    
    
    
    <category term="论文" scheme="https://1iuke.github.io/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="SSVEP" scheme="https://1iuke.github.io/tags/SSVEP/"/>
    
    <category term="高频" scheme="https://1iuke.github.io/tags/%E9%AB%98%E9%A2%91/"/>
    
    <category term="LED" scheme="https://1iuke.github.io/tags/LED/"/>
    
  </entry>
  
  <entry>
    <title>使用非侵入性脑机接口进行高速拼写</title>
    <link href="https://1iuke.github.io/2021/08/28/Paper/SSVEP/%E4%BD%BF%E7%94%A8%E9%9D%9E%E4%BE%B5%E5%85%A5%E6%80%A7%E8%84%91%E6%9C%BA%E6%8E%A5%E5%8F%A3%E8%BF%9B%E8%A1%8C%E9%AB%98%E9%80%9F%E6%8B%BC%E5%86%99/"/>
    <id>https://1iuke.github.io/2021/08/28/Paper/SSVEP/%E4%BD%BF%E7%94%A8%E9%9D%9E%E4%BE%B5%E5%85%A5%E6%80%A7%E8%84%91%E6%9C%BA%E6%8E%A5%E5%8F%A3%E8%BF%9B%E8%A1%8C%E9%AB%98%E9%80%9F%E6%8B%BC%E5%86%99/</id>
    <published>2021-08-28T00:22:35.000Z</published>
    <updated>2021-09-01T01:44:19.015Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="总结">0. 总结</h2><p>本研究基于单次稳态视觉诱发电位对频率和相位的极高精度编码，提出了一种新的频率相位联合<span class="math inline">\((JFPM)\)</span>调制方法和特定于用户的解码算法，实现了脑电的同步调制解调。获得了高达每分钟60个字符(∼，12个单词)的拼写速度。</p><p>目标字符可以通过基于单次SSVEP和单个SSVEP模板之间的相关性的解码算法来确定</p><h2 id="研究目标">1. 研究目标</h2><h2 id="研究背景及问题陈述">2. 研究背景及问题陈述</h2><p>通信速度慢仍然是BCI拼写器实际应用的主要障碍</p><p>这项研究假设单次试验SSVEP的视觉潜伏期在试验期间非常稳定。然而，由于自发脑电活动的干扰，对于持续时间如此短(即0.5s)的单次SSVEP，其视觉潜伏期很难测量</p><h2 id="研究方法">3. 研究方法</h2><h3 id="系统模型">1 系统模型</h3><p>40个目标，频率[8:0.2:15.8] 相位间隔0.35<span class="math inline">\(\pi\)</span></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210828084646577.png"></p><p>响应滞后刺激 <span class="math inline">\(\tau\)</span> = 140ms</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210828084808150.png"></p><h4 id="刺激信号与诱发的ssvep">2 刺激信号与诱发的SSVEP</h4><p>采样正弦刺激方法在产生SSVEP调频和调相刺激信号时的鲁棒性,SSVEP在不同的频率上表现出几乎恒定的潜伏期，这与先前的研究是一致的。因此，可以使用同步解调方法来实现SSVEP的检测</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210828090148033.png"></p><h4 id="ssvep的基波分量和谐波分量">3 SSVEP的基波分量和谐波分量</h4><p>采用滤波器组分析方法，从基波和谐波SSVEP分量中提取频率和相位信息</p><p>A 13.8频谱 C SNR</p><p>B D 刺激频率与响应频率的比</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210828090254120.png"></p><h4 id="jfpm">4 JFPM</h4><p>12.4Hz与相邻频率 响应与刺激信号的 相关性比较</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210828093151146.png"></p><h4 id="相位间隔和刺激持续时间的优化">5 相位间隔和刺激持续时间的优化</h4><p>刺激时间0.5s 相位0.35</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210828093412244.png"></p><h4 id="在线拼写性能">6 在线拼写性能</h4><p>0.5s刺激，0.5s注视转移</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210828093553939.png"></p><h2 id="结果">4. 结果</h2><p>据报道，基于眼动的拼写器的打字速度通常在每分钟5到10个单词之间。本研究开发的脑机接口拼写器的拼写速度达到每分钟60cpm(即∼每分钟12个单词)。因此，本研究表明，脑-机接口的通信速度可以与眼动跟踪系统相媲美，为视线跟踪提供了另一种方式。</p><h2 id="讨论">5. 讨论</h2><ol type="1"><li>每秒1个字符的拼写速度似乎接近人类凝视控制的速度极限。0.5s的试验间隔包括视觉潜伏期(∼140ms)、在线计算时间(∼80ms)和凝视转换所需的时间</li><li>提高分类性能，可缩短刺激时间<ol type="1"><li>个体优化</li><li>增加子带数</li><li>增加训练数据</li><li>减少视觉潜伏期变化</li></ol></li><li>编解码改进<ol type="1"><li>使用不固定的频率和相位间隔</li></ol></li><li>证明SSVEP的视觉潜伏期是稳定的，为将同步调制解调技术从电信引入BCI提供了神经生理学基础。</li><li>为了减少脑力负荷，可以通过<ol type="1"><li>增加刺激持续时间和凝视转换时间来调整拼写频率。</li><li>使用更舒适的刺激参数[例如，40 Hz以上的<strong>高频刺激</strong>]来减少视觉疲劳。</li><li>使用迁移学习，减少训练数据校准时间</li></ol></li></ol><h2 id="笔记">6. 笔记</h2><h2 id="参考文献">参考文献</h2><ol type="1"><li>Sakurada T, Kawase T, Komatsu T, Kansaku K (2015) Use of high-frequency visual stimuli above the critical flicker frequency in a SSVEP-based BMI.Clin Neurophysiol126(10): 1972–1978.</li></ol>]]></content>
    
    
    <summary type="html">High-speed spelling with a noninvasive brain–computer interface</summary>
    
    
    
    <category term="论文" scheme="https://1iuke.github.io/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="SSVEP" scheme="https://1iuke.github.io/tags/SSVEP/"/>
    
    <category term="滤波器组" scheme="https://1iuke.github.io/tags/%E6%BB%A4%E6%B3%A2%E5%99%A8%E7%BB%84/"/>
    
    <category term="JFPM" scheme="https://1iuke.github.io/tags/JFPM/"/>
    
  </entry>
  
  <entry>
    <title>gTRCA:一种最大化试次间可重复性和受试者间相似性多元EEG数据分析方法</title>
    <link href="https://1iuke.github.io/2021/08/26/Paper/SSVEP/gTRCA/"/>
    <id>https://1iuke.github.io/2021/08/26/Paper/SSVEP/gTRCA/</id>
    <published>2021-08-26T12:11:03.000Z</published>
    <updated>2021-08-26T13:12:21.348Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="总结">0. 总结</h2><h2 id="研究目标">1. 研究目标</h2><h2 id="研究背景及问题陈述">2. 研究背景及问题陈述</h2><h2 id="研究方法">3. 研究方法</h2><h2 id="结果">4. 结果</h2><h2 id="讨论">5. 讨论</h2><h2 id="笔记">6. 笔记</h2><h2 id="参考文献">参考文献</h2>]]></content>
    
    
    <summary type="html">Group task-related component analysis(gTRCA):a multivariate method for inter-trial reproducibility and inter-subject similarity maximization for EEG data analysis</summary>
    
    
    
    <category term="论文" scheme="https://1iuke.github.io/categories/%E8%AE%BA%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>Filter bank canonical correlation analysis for implementing a high-speed SSVEP-based brain–computer interface</title>
    <link href="https://1iuke.github.io/2021/08/26/Paper/SSVEP/FBCCA/"/>
    <id>https://1iuke.github.io/2021/08/26/Paper/SSVEP/FBCCA/</id>
    <published>2021-08-26T08:25:39.000Z</published>
    <updated>2021-08-26T11:59:43.432Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="总结">0. 总结</h2><p>谐波可以提供用于目标识别的有用信息</p><p>大幅降低自发背景脑电造成的误差</p><p>无训练</p><h2 id="研究目标">1. 研究目标</h2><p>提高BCI性能</p><h2 id="研究背景及问题陈述">2. 研究背景及问题陈述</h2><p>CCA未利用到谐波信息</p><p>FBCCA结合基频和谐波信息提高了SSVEP的检测</p><p>需要对滤波器组进行优化(子带选择)</p><ul><li><span class="math inline">\(M_1\)</span> 等间隔带宽的子带</li><li><span class="math inline">\(M_2\)</span> 对应于各个谐波频带的子带</li><li><span class="math inline">\(M_3\)</span> 子带覆盖多个谐波频段</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210826172553211.png"></p><h2 id="研究方法">3. 研究方法</h2><h3 id="bci-speller">3.1 BCI speller</h3><p>刺激频率 [8:0.2:15.8]</p><figure><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210826180859616.png" alt="image-20210826180859616"><figcaption aria-hidden="true">image-20210826180859616</figcaption></figure><h3 id="标准cca">3.2 标准CCA</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210826172353703.png"></p><p>X是EEG信号</p><p>Y是参考信号（正余弦参考）</p><h3 id="fbcca">3.3 FBCCA</h3><p>算法流程图：</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210826172640752.png"></p><ol type="1"><li>filter bank analysis;</li><li>CCA between SSVEP sub-band components and sinusoidal reference signals;</li><li>target identification.</li></ol><p>计算相关系数</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210826173457416.png"></p><p>加权求和</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210826173754544.png"></p><p>其中</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210826173827747.png"></p><h3 id="分析">3.3 分析</h3><p>FBCCA的三个参数：</p><ol type="1"><li>谐波数 <span class="math inline">\(N_h\)</span> [5 10]</li><li>权重系数 <span class="math inline">\(w\)</span> a=1.25 b=0.25</li><li>子带数 <span class="math inline">\(N\)</span> [7]</li></ol><h2 id="结果">4. 结果</h2><p><span class="math inline">\(M_3\)</span> 得到了最大的分类准确度</p><h3 id="幅度谱和snr">4.1 幅度谱和SNR</h3><p><strong>15Hz频率相应的幅度谱和SNR</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210826181216903.png"></p><p><strong>所有频率幅度谱和SNR</strong> (50Hz 陷波器)</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210826181419670.png"></p><h3 id="离线分析">4.2 离线分析</h3><h4 id="cca">1 CCA</h4><p>图b是1.25s数据长度的分类准确度<img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210826181719807.png"></p><p>谐波大大提升了CCA的性能</p><h4 id="fbcca-1">2 FBCCA</h4><p>1.25s数据 不同子带数目的acc和ITR</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210826182148511.png"></p><p>两种方法的比较</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210826182433656.png"></p><h3 id="在线性能">4.3 在线性能</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210826182515752.png"></p><h2 id="讨论">5. 讨论</h2><p>在线性能（151bit/m）接近于Nakanishi的32目标JFPM拼写器(167bit/m)。</p><p>高于Chen 的45目标拼写器（105bit/m)</p><h2 id="笔记">6. 笔记</h2><p>6.1 Extended CCA</p><p>扩展 CCA 方法用来改进标准 CCA 方法。使用单独的 SSVEP 训练数据来改进 CCA 过程中的参考信号。</p><p>Pan根据 SSVEP 的延迟，向参考信号添加了相位约束。</p><p>Zhang等人使用多集 CCA 方法</p><p>Nakanishi在 CCA 中同时使用正弦参考信号和平均 SSVEP 作为参考信号，然后组合从多个 CCA 过程中得出的特征</p><p>特点：<strong>需要训练</strong></p><h2 id="参考文献">参考文献</h2>]]></content>
    
    
    <summary type="html">用于实现基于SSVEP的高速脑机接口的滤波器组典型相关分析</summary>
    
    
    
    <category term="论文" scheme="https://1iuke.github.io/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="BCI" scheme="https://1iuke.github.io/tags/BCI/"/>
    
    <category term="CCA" scheme="https://1iuke.github.io/tags/CCA/"/>
    
    <category term="SSVEP" scheme="https://1iuke.github.io/tags/SSVEP/"/>
    
    <category term="滤波器组" scheme="https://1iuke.github.io/tags/%E6%BB%A4%E6%B3%A2%E5%99%A8%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>跨多刺激学习增强基于SSVEP的BCI的目标识别方法</title>
    <link href="https://1iuke.github.io/2021/08/24/Paper/SSVEP/%E8%B7%A8%E5%A4%9A%E5%88%BA%E6%BF%80%E7%9A%84%E5%AD%A6%E4%B9%A0%E5%A2%9E%E5%BC%BA%E4%BA%86%E5%9F%BA%E4%BA%8ESSVEP%E7%9A%84BCI%E7%9A%84%E7%9B%AE%E6%A0%87%E8%AF%86%E5%88%AB%E6%96%B9%E6%B3%95/"/>
    <id>https://1iuke.github.io/2021/08/24/Paper/SSVEP/%E8%B7%A8%E5%A4%9A%E5%88%BA%E6%BF%80%E7%9A%84%E5%AD%A6%E4%B9%A0%E5%A2%9E%E5%BC%BA%E4%BA%86%E5%9F%BA%E4%BA%8ESSVEP%E7%9A%84BCI%E7%9A%84%E7%9B%AE%E6%A0%87%E8%AF%86%E5%88%AB%E6%96%B9%E6%B3%95/</id>
    <published>2021-08-24T04:12:31.000Z</published>
    <updated>2021-08-24T04:22:17.848Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="总结">0. 总结</h2><p>解决TRCA,CCA校准数据不足时性能急剧下降问题</p><p>利用跨不同刺激的 SSVEP 的先验知识和特性。</p><p>增强性能并节省校准时间。</p><h2 id="研究目标">1. 研究目标</h2><h2 id="研究背景及问题陈述">2. 研究背景及问题陈述</h2><h2 id="研究方法">3. 研究方法</h2><h2 id="结果">4. 结果</h2><h2 id="讨论">5. 讨论</h2><h2 id="笔记">6. 笔记</h2><h2 id="参考文献">参考文献</h2>]]></content>
    
    
    <summary type="html">Learning across Multi-Stimulus Enhances Target Recognition Methods in SSVEP-Based BCIs</summary>
    
    
    
    <category term="论文" scheme="https://1iuke.github.io/categories/%E8%AE%BA%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>IISMC</title>
    <link href="https://1iuke.github.io/2021/08/21/Paper/SSVEP/IISMC/"/>
    <id>https://1iuke.github.io/2021/08/21/Paper/SSVEP/IISMC/</id>
    <published>2021-08-21T12:44:16.000Z</published>
    <updated>2021-08-25T02:53:57.996Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="总结">0. 总结</h2><h2 id="研究目标">1. 研究目标</h2><p>研究高速脑机接口，解决训练的费时费力问题</p><h2 id="研究背景及问题陈述">2. 研究背景及问题陈述</h2><p>虽然标准CCA对于SSVEPs的频率检测效率很高，但由于简化的预构建正余弦波几乎没有真实脑电数据中包含的丰富特征，因此识别精度并不令人满意</p><p>The individual template-based CCA (IT-CCA) ：用个体校正模板信号代替正余弦模板</p><p>优化参考信号的方法还有： (性能优于标准CCA)</p><ul><li>MwayCCA</li><li>L1-MCCA</li><li>MsetCCA</li></ul><p>与优化的参考信号相比，个体校正的模板信号可以更好地表征特定subject的 SSVEP,Combined-CCA将个体模板合并到 CCA 中获得了比其他现有的 CCA 更高的性能</p><p>最近最先进的 SSVEP 解码器通过<strong>最大化试验间相关关系</strong>从校准数据中学习空间滤波器，然后计算测试数据和转换后的单个模板之间的相关性</p><ul><li>TRCA</li><li>CORCA</li><li>SSCOR</li></ul><p>以前的研究依赖于<strong>任务相关信息在试验中稳定且相似</strong>的假设，这意味着需要足够数量的训练数据来提取基本特征。费时费力不利于应用。</p><p>独立于Subject的训练方法采用跨Subject迁移学习来提供Subject间的相似性,</p><ul><li>transfer template-based canonical correlation analysis (tt-CCA)</li><li>online transfer template-based CCA (ott-CCA)</li><li>transfer template-based Combined-CCA (Combined-tCCA)</li><li>adaptive transfer variant of Combined-tCCA (Adaptive-C3A)</li></ul><p>这些方法通过对所有源对象的训练数据进行平均来建立迁移模板，并且迁移模板被视为单个模板的替代品</p><p>最近的一项研究通过最大化跨试次和一组受试者的可重复成分来扩展 TRCA，称为组 TRCA (gTRCA)</p><p>gTRCA 利用新Subject和现有Subject之间的相似性来识别刺激</p><p>最近的另一项研究提出了最小二乘变换 (LST)，它将来自几个现有Subject的训练数据转换为适合个人数据并形成对个人数据的补充 。当单个试验次数有限时，LST 可以显着提高 SSVEP 解码性能。</p><p>事实上，固有的受试者内变异性可能会阻碍试验间转移能力。基于迁移知识的Subject间关联性可以减轻Subject内的可变性并减少校准会话的必要性</p><p>本研究提出了一个跨学科辅助框架，通过最大化Subject间和Subject内的相关性来增强 SSVEP 识别的鲁棒性。不仅是特定Subject的信息，更重要的是将Subject间的相似性集成到该方法中，从而进一步提高了提取特征的可分离性。</p><h2 id="研究方法">3. 研究方法</h2><p>IISMC通过最大化Subject间和Subject内的相关性，从自己和其他执行相同任务的Subject中提取特定的Subject信息和类似的任务相关信息。 多个弱分类器是由几个现有的被试建立的，然后通过平均加权整合来构建强分类器。</p><h2 id="结果">4. 结果</h2><p>与最先进的任务相关成分分析（TRCA）相比，性能更强。所需的训练数据更少。</p><h2 id="讨论">5. 讨论</h2><h2 id="笔记">6. 笔记</h2><h2 id="参考文献">参考文献</h2>]]></content>
    
    
    <summary type="html">Cross-Subject Assistance:Inter- and Intra-Subject Maximal Correlation for Enhancing the Performance of SSVEP-Based BCIs</summary>
    
    
    
    <category term="论文" scheme="https://1iuke.github.io/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="CCA" scheme="https://1iuke.github.io/tags/CCA/"/>
    
    <category term="迁移学习" scheme="https://1iuke.github.io/tags/%E8%BF%81%E7%A7%BB%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="TRCA" scheme="https://1iuke.github.io/tags/TRCA/"/>
    
    <category term="SSVEP" scheme="https://1iuke.github.io/tags/SSVEP/"/>
    
  </entry>
  
  <entry>
    <title>信号检测理论</title>
    <link href="https://1iuke.github.io/2021/06/11/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E4%BF%A1%E5%8F%B7%E6%A3%80%E6%B5%8B%E7%90%86%E8%AE%BA/"/>
    <id>https://1iuke.github.io/2021/06/11/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E4%BF%A1%E5%8F%B7%E6%A3%80%E6%B5%8B%E7%90%86%E8%AE%BA/</id>
    <published>2021-06-11T01:55:52.000Z</published>
    <updated>2021-06-11T02:58:39.447Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="section">1</h2><ul><li><p>概率密度函数pdf</p></li><li><p>累积分布函数cdf</p></li></ul><blockquote><p><strong>累积分布函数</strong>(Cumulative Distribution Function)，又叫分布函数，是<em>概率密度函数]的积分</em>，能完整描述一个实随机变量<em>X</em>的概率分布。</p></blockquote><ul><li>逆累积分布函数icdf</li></ul><blockquote><p>逆累积分布函数里面的"逆"，对应的英文单词是inverse</p><p>所以“逆累积分布函数”的意思其实是“反累积分布函数”</p><p>累积分布：分位点－&gt;概率，</p><p>逆累积分布：概率－&gt;分位点。</p></blockquote><h2 id="section-1">2</h2><ul><li>误差函数erf</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210611101308260.png"></p><ul><li>补余误差函数</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210611101355651.png"></p><ul><li>与标准正态分布函数的关系</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210611101446360.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210611101431797.png"></p><ul><li>逆补余误差函数</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210611105710564.png"></p><ul><li>与逆累积分布函数的关系</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210611105757586.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>脑机接口运动想象信号处理中的分类器组合方法</title>
    <link href="https://1iuke.github.io/2021/06/07/Paper/%E8%84%91%E6%9C%BA%E6%8E%A5%E5%8F%A3%E8%BF%90%E5%8A%A8%E6%83%B3%E8%B1%A1%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86%E4%B8%AD%E7%9A%84%E5%88%86%E7%B1%BB%E5%99%A8%E7%BB%84%E5%90%88%E6%96%B9%E6%B3%95/"/>
    <id>https://1iuke.github.io/2021/06/07/Paper/%E8%84%91%E6%9C%BA%E6%8E%A5%E5%8F%A3%E8%BF%90%E5%8A%A8%E6%83%B3%E8%B1%A1%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86%E4%B8%AD%E7%9A%84%E5%88%86%E7%B1%BB%E5%99%A8%E7%BB%84%E5%90%88%E6%96%B9%E6%B3%95/</id>
    <published>2021-06-07T02:59:16.000Z</published>
    <updated>2021-06-07T03:43:50.836Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="总结">0. 总结</h2><h2 id="研究目标">1. 研究目标</h2><h2 id="研究背景及问题陈述">2. 研究背景及问题陈述</h2><p>脑信号的变化有不同的来源，表现为脑电波振幅和频率的变化。根据产生的原因，可分为 P300、VEP、SCP 和感觉运动信号，包括脑电波的 mu 和 beta 带以及 ERP 和 MRP</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210607111136797.png"></p><h2 id="研究方法">3. 研究方法</h2><h3 id="频率选择">3.1 频率选择</h3><p>DSLVQ</p><h3 id="特征提取">3.2 特征提取</h3><p>Furrier 变换的一个弱点是无法证明脑电波中高频变化的影响。</p><p>为了解决这个问题，引入了短时傅里叶变换，通过将具有特定长度的窗口应用于时域中的信号，将信号划分为时间段。</p><p>但是使用 STFT 会导致丢失一些关于非常高或非常低的频率的信息。</p><p>由于脑电波是随时间变化的信号并且包含频率和时间信息，所以像小波这样的时频方法更合适。</p><p>小波变换方法的主要优点是提取了有关信号基频的所有信息</p><p>PWT 是离散小波变换 (DWT) [19] 的扩展。</p><p>DWT 中的通用步骤将近似系数分为两部分。分裂后我们得到一个近似系数向量和一个细节系数向量。 两个连续近似之间丢失的信息在细节系数中被捕获。然后下一步包括分裂新的近似系数向量；提取的细节永远不会被重新分析。在相应的小波包情况下，每个细节系数向量也使用与近似向量分裂相同的方法分解为两部分。 这提供了最丰富的分析。</p><h3 id="分类">3.3 分类</h3><p>SVM</p><p>K-NN</p><p>贝叶斯方法</p><p>Parzen Method</p><p>多层感知器 (MLP)</p><h3 id="分类组合">3.4 分类组合</h3><p>有序加权平均OWA是模糊积分方法之一，计算时间少，性能合适，是 BCI 应用中的重要因素。</p><h2 id="结果">4. 结果</h2><figure><img src= "/img/loading.gif" data-lazy-src="/2021/06/07/Paper/%E8%84%91%E6%9C%BA%E6%8E%A5%E5%8F%A3%E8%BF%90%E5%8A%A8%E6%83%B3%E8%B1%A1%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86%E4%B8%AD%E7%9A%84%E5%88%86%E7%B1%BB%E5%99%A8%E7%BB%84%E5%90%88%E6%96%B9%E6%B3%95/Users/12647/AppData/Roaming/Typora/typora-user-images/image-20210607114324015.png" alt="image-20210607114324015"><figcaption aria-hidden="true">image-20210607114324015</figcaption></figure><h2 id="讨论">5. 讨论</h2><h2 id="笔记">6. 笔记</h2><h2 id="参考文献">参考文献</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="论文" scheme="https://1iuke.github.io/categories/%E8%AE%BA%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>使用典型相关分析检测fMRI中的神经活动</title>
    <link href="https://1iuke.github.io/2021/06/07/Paper/%E4%BD%BF%E7%94%A8%E5%85%B8%E5%9E%8B%E7%9B%B8%E5%85%B3%E5%88%86%E6%9E%90%E6%A3%80%E6%B5%8BfMRI%E4%B8%AD%E7%9A%84%E7%A5%9E%E7%BB%8F%E6%B4%BB%E5%8A%A8/"/>
    <id>https://1iuke.github.io/2021/06/07/Paper/%E4%BD%BF%E7%94%A8%E5%85%B8%E5%9E%8B%E7%9B%B8%E5%85%B3%E5%88%86%E6%9E%90%E6%A3%80%E6%B5%8BfMRI%E4%B8%AD%E7%9A%84%E7%A5%9E%E7%BB%8F%E6%B4%BB%E5%8A%A8/</id>
    <published>2021-06-07T02:38:34.000Z</published>
    <updated>2021-06-07T02:51:20.907Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="总结">0. 总结</h2><p>介绍了一种在功能磁共振成像 (fMRI) 数据中检测神经活动的新方法。它基于典型相关分析 (CCA)，是 fMRI 中广泛使用的单变量相关分析的多变量扩展。</p><p>为了检测活动的同质区域，该方法结合了血液动力学响应的子空间建模和空间关系的使用。当使用 t 检验、F 检验和普通相关分析等单变量方法时，fMR 图像中无疑存在的空间相关性被完全忽略。由于这个原因，此类方法对噪声非常敏感，导致难以检测激活和错误激活的重要贡献。</p><p>此外，所提出的 CCA 方法还可以检测激活的大脑区域，不仅基于<strong>相关系数</strong>的阈值化，而且还基于生理参数，例如<strong>时间形状</strong>和血液动力学响应的<strong>延迟</strong>。</p><h2 id="研究目标">1. 研究目标</h2><h2 id="研究背景及问题陈述">2. 研究背景及问题陈述</h2><ol type="1"><li><p>fMRI根据不同区域血氧浓度不同</p></li><li><p>t-test检测确定，已知信号，高斯白噪声效果最好。实际上信号是未知的，也不是高斯分布的白噪声</p></li></ol><h2 id="研究方法">3. 研究方法</h2><ol type="1"><li><p>CCA计算最相关的系数</p></li><li><p>相似度计算<span class="math inline">\(angle \ \ \alpha=arccos \ r^Tr_0/(||r||_2||r_0||_2)\)</span></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210607104904569.png"></p></li><li><p>时间延迟</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210607104930215.png"></p></li></ol><h2 id="结果">4. 结果</h2><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210607105019293.png"></p><p>用三种不同的方法分析了三个图像切片。从顶部开始：t 检验、F 检验和本工作中底行描述的 CCA 方法。</p><p>图例表示 t-、F- 和相关值的颜色映射。与 t 和 F 检验相比，CCA 方法检测没有明显虚假激活的同质活动区域。</p><p>特别是最左侧的切片，其中 CCA 方法清楚地检测到两个不同的活动区域。</p><h2 id="讨论">5. 讨论</h2><h2 id="笔记">6. 笔记</h2><h2 id="参考文献">参考文献</h2>]]></content>
    
    
    <summary type="html">Detection of Neural Activity in Functional MRI Using Canonical Correlation Analysis</summary>
    
    
    
    <category term="论文" scheme="https://1iuke.github.io/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="CCA" scheme="https://1iuke.github.io/tags/CCA/"/>
    
  </entry>
  
  <entry>
    <title>人机交互中c-VEP脑机接口迁移学习的综合研究</title>
    <link href="https://1iuke.github.io/2021/05/18/Paper/C6%E4%BA%BA%E6%9C%BA%E4%BA%A4%E4%BA%92%E4%B8%ADc-VEP%E8%84%91%E6%9C%BA%E6%8E%A5%E5%8F%A3%E8%BF%81%E7%A7%BB%E5%AD%A6%E4%B9%A0%E7%9A%84%E7%BB%BC%E5%90%88%E7%A0%94%E7%A9%B6/"/>
    <id>https://1iuke.github.io/2021/05/18/Paper/C6%E4%BA%BA%E6%9C%BA%E4%BA%A4%E4%BA%92%E4%B8%ADc-VEP%E8%84%91%E6%9C%BA%E6%8E%A5%E5%8F%A3%E8%BF%81%E7%A7%BB%E5%AD%A6%E4%B9%A0%E7%9A%84%E7%BB%BC%E5%90%88%E7%A0%94%E7%A9%B6/</id>
    <published>2021-05-18T06:47:01.000Z</published>
    <updated>2021-05-18T07:12:30.612Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="总结">0. 总结</h2><h2 id="研究目标">1. 研究目标</h2><p>如何在c-VEP BCI中从源被试转移到目标被试。</p><h2 id="研究背景及问题陈述">2. 研究背景及问题陈述</h2><p>为了减少脑机接口（BCI）的校准时间甚至实现零训练BCI，研究人员一直在研究如何有效地应用迁移学习。</p><h2 id="研究方法">3. 研究方法</h2><p>通常，以两种方式实施BCI中的知识转移：集成或合并(ensemble or pool)。在这项工作中，我们提出了两种不同的转移方法。</p><p>一种是将所有通道的整体信息从源主题传输到目标主题。</p><p>第二种方法是在受试者之间传递相应频道的信息。</p><p>主题转移框架是通过将两种方法与集成或合并相结合而构建的</p><h2 id="结果">4. 结果</h2><p>c-VEP BCI的转移学习可以减少校准时间或在没有足够受试者自身数据的情况下开始识别BCI</p><h2 id="讨论">5. 讨论</h2><h2 id="笔记">6. 笔记</h2><h2 id="参考文献">参考文献</h2>]]></content>
    
    
    <summary type="html">Ensemble or pool:A comprehensive study on transfer learning for c-VEP BCI during interpersonal interaction</summary>
    
    
    
    <category term="论文" scheme="https://1iuke.github.io/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="c-VEP" scheme="https://1iuke.github.io/tags/c-VEP/"/>
    
    <category term="迁移学习" scheme="https://1iuke.github.io/tags/%E8%BF%81%E7%A7%BB%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>宽带视觉诱发电位:脑计算机接口中的Reconvolution</title>
    <link href="https://1iuke.github.io/2021/05/13/Paper/C5.%E5%AE%BD%E5%B8%A6%E8%A7%86%E8%A7%89%E8%AF%B1%E5%8F%91%E7%94%B5%E4%BD%8D-%E8%84%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%8E%A5%E5%8F%A3%E4%B8%AD%E7%9A%84Reconvolution/"/>
    <id>https://1iuke.github.io/2021/05/13/Paper/C5.%E5%AE%BD%E5%B8%A6%E8%A7%86%E8%A7%89%E8%AF%B1%E5%8F%91%E7%94%B5%E4%BD%8D-%E8%84%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%8E%A5%E5%8F%A3%E4%B8%AD%E7%9A%84Reconvolution/</id>
    <published>2021-05-13T01:38:26.000Z</published>
    <updated>2021-05-13T07:53:31.035Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="总结">0. 总结</h2><h2 id="研究目标">1. 研究目标</h2><h2 id="研究背景及问题陈述">2. 研究背景及问题陈述</h2><h3 id="bci-cycle">1 BCI cycle</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210513101523839.png"></p><h3 id="之前的研究">2 之前的研究</h3><p>1 Bin使用63bit m序列刺激，</p><ul><li>16目标ITR达到92.8bits/min</li><li>32目标ITR达到108bits/min</li></ul><p>2 Once Class Support Vector Machine (OCSVM) 可以更好地估计高维数据的概率分布。</p><p>​ ITR 达到133.6bits/min</p><p>​ 通过实现自适应分类器，ITR提高到144bits/min（迄今为止报告的最高速度）</p><h3 id="本文研究">3 本文研究</h3><p>（1）使用Gold码对基于BBVEP的矩阵拼写器进行验证；</p><p>（2）对用于模板生成和预测的生成模型进行验证；</p><p>（3）对拼写器设计进行优化。</p><h2 id="研究方法">3. 研究方法</h2><p><strong>参加者</strong>：12名大学生</p><p><strong>设备</strong>：24英寸BenQ XL2420T LED monitor ，120Hz刷新率，1920x1080分辨率，时间精确度2ms，白，黑，灰 分别为 185lux,4lux,55lux</p><p>​ 记录64通道数据，数据采样率2048Hz，下采样至360hz。数据经过线性去趋势，公共平均参考和在5 − 48Hz和52 − 100Hz的两个通带进行频谱滤波后进行了预处理。</p><p>​ <a href="http://dx.doi.org/10.17026/%20dans-zth-37cr">处理后的数据</a></p><p><strong>刺激</strong>：使用两组Gold码</p><p><strong>校准</strong>：使用相似性度量</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210513105623709.png"></p><p>流程图</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210513105756887.png"></p><p><strong>模板生成：Reconvolution</strong></p><p>​ 重新卷积是结合反卷积和卷积的模板生成的两步方法。</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210513110548018.png"></p><p><strong>首先</strong>，通过分解全部响应来估计对单个闪光的响应（即，<strong>估计步骤</strong>)。</p><p>单通道单次试验的通用分解模型可以写成:</p><p>​ <img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210513111002472.png"></p><p>可表示为矩阵形式：</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210513111631636.png"></p><p>通过级联将该模型推广到多个单通道单次试验，以形成以下线性回归问题：</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210513112405080.png"></p><p>该解决方案可以找到如下：</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210513112442951.png"></p><p>​ <strong>其次</strong>，通过应用估计的单闪光响应（即，<strong>生成步骤</strong>）来生成对（未)看到的比特序列的全响应。</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210513133224251.png"></p><p><strong>空间过滤：典型相关分析</strong></p><h2 id="结果">4. 结果</h2><h2 id="讨论">5. 讨论</h2><h2 id="笔记">6. 笔记</h2><h2 id="参考文献">参考文献</h2>]]></content>
    
    
    <summary type="html">Broad-Band Visually Evoked Potentials:Re (con)volution in Brain-Computer Interfacing</summary>
    
    
    
    <category term="论文" scheme="https://1iuke.github.io/categories/%E8%AE%BA%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>基于VEP的脑机接口</title>
    <link href="https://1iuke.github.io/2021/05/12/Paper/C1.%E5%9F%BA%E4%BA%8EVEP%E7%9A%84%E8%84%91%E6%9C%BA%E6%8E%A5%E5%8F%A3/"/>
    <id>https://1iuke.github.io/2021/05/12/Paper/C1.%E5%9F%BA%E4%BA%8EVEP%E7%9A%84%E8%84%91%E6%9C%BA%E6%8E%A5%E5%8F%A3/</id>
    <published>2021-05-12T01:46:16.000Z</published>
    <updated>2021-05-12T02:28:54.335Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>VEP是由对象视野的感官刺激引起的，反映了大脑中的视觉信息处理机制。</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210512095705169.png"></p><p>根据不同的刺激调制方法，基于VEP的脑机接口 可分为三类：</p><ul><li>t-VEP</li><li>f-VEP</li><li>c-VEP</li></ul><h2 id="t-vep">1 t-VEP</h2><p>在t-VEP BCI中，不同目标的闪烁序列相互独立</p><p>通过峰谷值判定目标</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210512095916585.png"></p><p>缺点：信息传输率ITR(&lt;30 bit/min)</p><h2 id="f-vep">2 f-VEP</h2><p>使用不同的频率调制</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210512100607193.png"></p><p>优点：不需训练，系统配置简单，传输率高（30-60 bits/min)</p><h2 id="c-vep">3 c-VEP</h2><p>使用正交的伪随机码调制。</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210512100652462.png"></p><h2 id="总结">4. 总结</h2><table><thead><tr class="header"><th>vep</th><th>t-vep</th><th>f-vep</th><th>c-vep</th></tr></thead><tbody><tr class="odd"><td>调制方法</td><td>不同时间</td><td>不同频率</td><td>正交伪随机码</td></tr><tr class="even"><td>ITR(bits/min)</td><td>&lt;30</td><td>30-60</td><td>&gt;100</td></tr><tr class="odd"><td>是否训练</td><td>非必须</td><td>非必须</td><td>必须</td></tr><tr class="even"><td>系统配置</td><td></td><td>简单</td><td></td></tr><tr class="odd"><td>识别准确率</td><td></td><td></td><td>最高</td></tr><tr class="even"><td>应用</td><td></td><td>轮椅控制</td><td>拼写器</td></tr></tbody></table><h2 id="结论">5 结论</h2><p>刺激调制的设计是基于VEP的BCI系统的关键。</p><p>在将来的工作中，可以使用其他刺激调制技术（例如，通信系统中使用的各种多址方法）来提高BCI性能。</p><h2 id="参考文献">参考文献</h2>]]></content>
    
    
    <summary type="html">VEP-Based Brain-Computer Interfaces:Time, Frequency, and Code Modulations</summary>
    
    
    
    <category term="论文" scheme="https://1iuke.github.io/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="t-VEP" scheme="https://1iuke.github.io/tags/t-VEP/"/>
    
    <category term="f-VEP" scheme="https://1iuke.github.io/tags/f-VEP/"/>
    
    <category term="c-VEP" scheme="https://1iuke.github.io/tags/c-VEP/"/>
    
  </entry>
  
  <entry>
    <title>主成分分析PCA</title>
    <link href="https://1iuke.github.io/2021/04/29/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90PCA/"/>
    <id>https://1iuke.github.io/2021/04/29/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90PCA/</id>
    <published>2021-04-29T08:11:42.000Z</published>
    <updated>2021-04-29T09:42:20.832Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>将n维数据用m维表示（m&lt;n),并且尽可能保留原始数据的信息。</p><p>对于最简单的二维数据，将其降到一维。直观来看，<span class="math inline">\(u_1\)</span> 比 <span class="math inline">\(u_2\)</span> 好。</p><p>降维的标准为：样本点到这个超平面的距离足够近,或者说样本点在这个超平面上的投影能尽可能的分开。</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/1042406-20161231162149992-1521335659.png"></p><p>故有两种等价推导（勾股定理）</p><h2 id="推导1基于最小投影距离">推导1：基于最小投影距离</h2><h2 id="推导2基于最大投影方差">推导2：基于最大投影方差</h2><h2 id="算法流程">算法流程：</h2><p>输入：n维样本集D，降到<span class="math inline">\(n&#39;\)</span>维</p><p>输出: 降维后样本集<span class="math inline">\(D&#39;\)</span></p><ol type="1"><li><p>样本中心化</p></li><li><p>计算样本协方差矩阵<span class="math inline">\(XX^T\)</span></p></li><li><p>对<span class="math inline">\(XX^T\)</span>进行特征分解</p></li><li><p>取出<span class="math inline">\(n&#39;\)</span>个特征值对应的特征向量，标准化后组成特征向量矩阵<span class="math inline">\(W\)</span></p></li><li><p>进行变换<span class="math inline">\(y = W^Tx\)</span></p></li></ol><h2 id="pca实例">PCA实例</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs matlab">load hald<br>ingredients<br><span class="hljs-comment">%直接pca</span><br>coeff = pca(ingredients,<span class="hljs-string">&quot;Algorithm&quot;</span>,<span class="hljs-string">&quot;svd&quot;</span>)<br><span class="hljs-comment">%中心化</span><br>ingredients = ingredients-<span class="hljs-built_in">mean</span>(ingredients);<br><span class="hljs-comment">%XX&#x27;</span><br>X = ingredients&#x27;*ingredients;<br><span class="hljs-comment">%SVD分解</span><br>[U,S,V] = svd(X);<br>V<br></code></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210429171234345.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="机器学习" scheme="https://1iuke.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="降维" scheme="https://1iuke.github.io/tags/%E9%99%8D%E7%BB%B4/"/>
    
    <category term="PCA" scheme="https://1iuke.github.io/tags/PCA/"/>
    
  </entry>
  
  <entry>
    <title>线性判别分析LDA</title>
    <link href="https://1iuke.github.io/2021/04/27/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%BA%BF%E6%80%A7%E5%88%A4%E5%88%AB%E5%88%86%E6%9E%90LDA/"/>
    <id>https://1iuke.github.io/2021/04/27/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%BA%BF%E6%80%A7%E5%88%A4%E5%88%AB%E5%88%86%E6%9E%90LDA/</id>
    <published>2021-04-27T02:09:18.000Z</published>
    <updated>2021-04-29T09:42:54.290Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>LDA是一种监督学习的降维技术，也就是说它的数据集的每个样本是有类别输出的。这点和PCA不同。PCA是不考虑样本类别输出的无监督降维技术。LDA的思想可以用一句话概括，就是“<strong>投影后类内方差最小，类间方差最大</strong>”。</p><p>将数据在低维度上进行投影，投影后希望每一种类别数据的投影点尽可能的接近，而不同类别的数据的类别中心之间的距离尽可能的大。</p><p>假设有两类数据 分别为红色和蓝色，如下图所示，这些数据特征是二维的，我们希望将这些数据投影到一维的一条直线，让每一种类别数据的投影点尽可能的接近，而红色和蓝色数据中心之间的距离尽可能的大。</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/1042406-20170103121629034-435985945.png"></p><h2 id="lda实例">LDA实例</h2><p>生成三类三维特征的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> mpl_toolkits.mplot3d <span class="hljs-keyword">import</span> Axes3D<br>%matplotlib inline<br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> make_classification<br>X, y = make_classification(n_samples=<span class="hljs-number">1000</span>, n_features=<span class="hljs-number">3</span>, n_redundant=<span class="hljs-number">0</span>, n_classes=<span class="hljs-number">3</span>, n_informative=<span class="hljs-number">2</span>,n_clusters_per_class=<span class="hljs-number">1</span>,class_sep =<span class="hljs-number">0.5</span>, random_state =<span class="hljs-number">10</span>)<br>fig = plt.figure()<br>ax = Axes3D(fig, rect=[<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>], elev=<span class="hljs-number">30</span>, azim=<span class="hljs-number">20</span>)<br>ax.scatter(X[:, <span class="hljs-number">0</span>], X[:, <span class="hljs-number">1</span>], X[:, <span class="hljs-number">2</span>],marker=<span class="hljs-string">&#x27;o&#x27;</span>,c=y)<br></code></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/1042406-20181229110134630-26675967.png"></p><p><strong>PCA的结果</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.decomposition <span class="hljs-keyword">import</span> PCA<br>pca = PCA(n_components=<span class="hljs-number">2</span>)<br>pca.fit(X)<br><span class="hljs-built_in">print</span> pca.explained_variance_ratio_<br><span class="hljs-built_in">print</span> pca.explained_variance_<br>X_new = pca.transform(X)<br>plt.scatter(X_new[:, <span class="hljs-number">0</span>], X_new[:, <span class="hljs-number">1</span>],marker=<span class="hljs-string">&#x27;o&#x27;</span>,c=y)<br>plt.show()<br></code></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/1042406-20181229110149288-773076003.png"></p><p>由于PCA没有利用类别信息，我们可以看到降维后，样本特征和类别的信息关联几乎完全丢失。</p><p><strong>LDA的结果</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.discriminant_analysis <span class="hljs-keyword">import</span> LinearDiscriminantAnalysis<br>lda = LinearDiscriminantAnalysis(n_components=<span class="hljs-number">2</span>)<br>lda.fit(X,y)<br>X_new = lda.transform(X)<br>plt.scatter(X_new[:, <span class="hljs-number">0</span>], X_new[:, <span class="hljs-number">1</span>],marker=<span class="hljs-string">&#x27;o&#x27;</span>,c=y)<br>plt.show()<br></code></pre></td></tr></table></figure><p>类别信息之间的关系得以保留。</p><p>　<img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210429173834692.png">　　　</p><p>一般来说，如果数据是有类别标签的，那么优先选择LDA去尝试降维；当然也可以使用PCA做很小幅度的降维去消去噪声，然后再使用LDA降维。如果没有类别标签，那么肯定最先考虑PCA</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="机器学习" scheme="https://1iuke.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="降维" scheme="https://1iuke.github.io/tags/%E9%99%8D%E7%BB%B4/"/>
    
    <category term="LDA" scheme="https://1iuke.github.io/tags/LDA/"/>
    
  </entry>
  
  <entry>
    <title>BCI基础知识</title>
    <link href="https://1iuke.github.io/2021/04/23/BCI/BCI/"/>
    <id>https://1iuke.github.io/2021/04/23/BCI/BCI/</id>
    <published>2021-04-23T07:00:10.000Z</published>
    <updated>2021-09-18T03:46:50.478Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="脑电图eeg">1 脑电图(EEG)</h1><p>脑电图是通过与人的头皮相连的电极记录的脑电势。脑电图显示了这种电活动如何随时间变化，并且提供有关大脑状态的信息。</p><p>脑电图传统上用于医疗目的。用于诊断许多影响大脑状况的电活动模式。例如癫痫，这种病会导致反复的脑癫痫发作。脑电图可以帮助诊断和处理这种情况。脑电图还可帮助分析睡眠障碍患者。通常，它可以用于识别大脑无法正常工作的区域。脑电图也可用于其他领域，例如分析头部受伤，脑瘤或测量昏迷个体的脑功能。</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210423154735845.png"></p><p>图a为10s脑电信号。b是该信号的功率谱密度。</p><p>作为医疗分析工具，EEG的缺点是空间分辨率有限，但是时间分辨率很高。EEG设备采样率可以达到5kHz,可以记录毫秒级精度。并且记录头皮脑电，很少有副作用。</p><p>CT和MRI有很高的空间分辨率，通过提供高分辨率图像，可提供有关大脑状态的更精确信息。但是它们没有足够的时间分辨率来跟踪大脑的功能。</p><h2 id="解释脑电信号">1.1 解释脑电信号</h2><p>大脑的EEG测量显示出电活动如何随时间变化。如何解释和操纵该信号取决于脑电图记录的目的。</p><p>例如，分析睡眠阶段时，可以使用EEG。通过分析哪些频段代表该信号。</p><p>一种方法是傅里叶变换(FT)，将时域信号变换到频域。傅里叶变换将无限持续时间的时域信号转换成由无限数量的正弦波组成的连续频谱。</p><p>傅里叶变换FT： <span class="math display">\[F(w) = \int_{-\infty }^{\infty}f(t)e^{-2\pi jwt}dt\]</span> EEG信号由连续的采样点组成。故有离散傅里叶变换DFT <span class="math display">\[X_k =\sum_{j=0}^{N-1}x_je^{-j2\pi ik/N},k\in Z\]</span> DFT的时间效率为<span class="math inline">\(O(N^2)\)</span>，为了提高效率，通常使用FFT(快速傅里叶变换），时间效率<span class="math inline">\(O(NlogN)\)</span>,</p><p>存在各种FFT算法，Cooley–Tukey算法是最受欢迎的算法之一(蝶形运算)</p><h2 id="频域分析">1.2 频域分析</h2><p>频谱信息通常在频域进行分析。在该频谱中，可以看出给定频率或频带在信号中的突出程度。在频谱分析时，通常认为该信号在短时间内不会变化，这个时间段叫做窗(window),通常是几秒钟。频谱的单位是<span class="math inline">\(u^2/Hz\)</span>.<span class="math inline">\(u\)</span>是时间信号的幅度。EEG信号通常是<span class="math inline">\(\mu V\)</span>，所以EEG信号的PSD为<span class="math inline">\(\mu V^2/Hz\)</span>.如上图。</p><p>频谱显示了每个频率的频谱密度，是二维的。可以叠加时间信息作为另一维，叫做光谱图。如图</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210423170819130.png"></p><p>x轴为时间信息，y轴为频率信息，颜色深浅代表某一频率，某一时间的能量信息。红色代表能量大，蓝色代表能量小。上图大部分能量位于40Hz以下。</p><p>分析频率域中的 EEG 信号时假定信号中的感兴趣部分来自时间域信号中的重复峰值。然而，在某些应用中，感兴趣的信息并不在于定期重复的事件，而在于在给定时间发生的事件。对于这些应用，通常进行时域分析。</p><h2 id="国际10-20系统">1.3 国际10-20系统</h2><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210423171739990.png"></p><p>10-20 系统增加了复制实验的可能性。</p><h1 id="脑机接口bci">2 脑机接口(BCI)</h1><p>脑机接口（BCI）是一个在大脑活动和计算设备之间创建接口的系统。脑电图是BCI最广泛使用的大脑信号。其重要原因是皮质突触作用产生电信号，在 10 到 100 毫秒范围内变化 。脑电图和磁脑成像 （MEG） 是唯一广泛可用的技术，具有足够的时间分辨率来跟踪这些快速动态变化。然而，与 EEG 可用的硬件相比，MEG 系统笨重且价格昂贵。</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210423172548899.png"></p><p>BCI 是一个连续的反馈循环：EEG 信号中用户的意图转换为命令发送到设备。该设备向用户提供执行命令时的反馈，用户可以自由地专注于新意图。反馈循环在上图中显示。</p><p>EEG信号从放置在头皮的电极处获取，经过数字化后经计算机进行信号处理。提取需要的特征。然而由于<code>记录方法与设备</code>和<code>人体电位时刻</code>改变，所获取的信号有许多噪声。通常进行滤波以提高信噪比（SNR）。 <span class="math display">\[SNR=\frac{P_{signal}}{P_{noise}}\]</span></p><p>P代表功率。然后对滤波后的信号进行特征提取。常用的<strong>特征提取方法</strong>有：<code>测量频带功率</code>，<code>计算功率谱密度（PSD）</code>或<code>查看时频特征</code></p><p>信号经过滤波并提取了相关特征后，对数据进行<code>分类</code>，目的是确定用户的意图。如果检测到意图，则将命令发送到与系统相连的设备，执行想要的操作。设备执行动作时会完成反馈循环，为用户提供反馈。</p><p>机器学习方法是BCI研究中最普遍的<strong>分类方法</strong>，其中<code>线性分类器</code>（例如线性判别分析（LDA）和<code>支持向量机</code>（SVM））是最流行的算法。</p><p>当今的BCI研究反映了<strong>两个主要范例</strong>：<code>诱发电位</code>（EPs）和<code>振荡特征</code>。</p><p>EPs是与事件（例如视觉刺激）锁相的独特波形。</p><p>振荡特征主要围绕频谱分析，例如查看不同频段的功率以确定用户的意图或情感状态。</p><h2 id="evoked-potentials">2.1 Evoked potentials</h2><p>EPs中最常用的有两种：</p><ol type="1"><li>VEPs</li><li>P300</li></ol><p>ERP是所测得的大脑反应，它是特定感觉，认知或运动事件的直接结果。可以根据刺激呈现后其成分出现的等待时间对ERP进行分类。</p><ul><li>具有短时延的ERPs通常在刺激后不到100ms内发生。这些成分是在大脑的感觉刺激处理阶段生成的，它们被称为外源性成分，因为它们是对外部刺激源的直接响应。</li><li>具有长时延的ERPs发生在刺激后大于100ms的时间内，代表了皮质的处理阶段。它们被称为内源性成分，因为它们较少受刺激物的物理特征决定。</li></ul><h3 id="p300">1 P300</h3><p>P300是在决策过程中引发的ERP的成分，因此是内源成分。之所以称为P300，是因为当用EEG记录时，它会在做出决定后在顶叶上产生一个正峰，并有大约300 ms的等待时间，如图所示。该信号存在于每个人身上，并且几乎不需要用户初始化训练，所以比较流行。</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210426095950600.png"></p><h3 id="veps">2 VEPs</h3><figure><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210426101222147.png" alt="基于VEPs的BCI"><figcaption aria-hidden="true">基于VEPs的BCI</figcaption></figure><p>VEPs是由感觉刺激引起的，反映了大脑中的视觉信息处理机制。</p><p>视觉刺激与枕叶的视觉皮质有关。</p><p>基于VEPs的BCI可分为三类：</p><h4 id="t-vep">1 t-VEP</h4><p>t-VEP的思想是使闪光序列相互独立，例如，通过强制使闪光序列在时间上严格不重叠。这些短暂的刺激，引起闪烁的VEP（FVEP）。FVEP有200ms短暂时延，因此叫做P2 或 P200信号。</p><p>在t-VEP BCI中，需要时序信息才能进行准确分类。还需要对多个时期（时间段）求平均值，以增强来自固定目标的FVEP并抑制来自非固定目标的FVEP。 由于要求闪烁序列必须相互独立，因此t-VEP BCI通常具有较低的激励速率（&lt;4 Hz），与其他方法相比，吞吐量较低。</p><h4 id="f-vep-ssvep">2 f-VEP / SSVEP</h4><p>在基于SSVEP的BCI中，目标以不同的频率闪烁。注视其中一个目标会产生诱发电位的周期性序列，其频率与目标相同。它会在基频及其谐波中产生响应。 f被认为是一次谐波，2f是第二次谐波，依此类推。频谱分析是基于SSVEP的BCI的最常见分类技术。 SSVEP也与P300相似，因为这两种方法都不需要用户训练。</p><h4 id="c-vep">3 c-VEP</h4><p>基于c-VEP的BCI使用伪随机刺激序列。通过时移单个伪随机码刺激序列为多个目标刺激创建不同的刺激序列。由于刺激序列的这种移动，需要时间信息来执行分类。</p><p>通常使用模板匹配方法进行分类。通过执行训练会话来获得该模板T，在该训练会话中，指示用户注视模板k。获得N个刺激周期数据，平均后得到模板<span class="math inline">\(T\)</span>,通过时移得到<span class="math inline">\(T_i\)</span>,通过计算相关系数执行分类，相关系数最大的即为该类。</p><h2 id="感觉运动节律-smrs">2.2 感觉运动节律 (SMRs)</h2><p>基于感觉运动节律师（SMR）的系统是使用振荡特征的系统的示例。用于BCI的两种主要振荡类型是在7-13 Hz范围内振荡的<span class="math inline">\(\mu\)</span>节律和在13-30 Hz范围内振荡的<span class="math inline">\(β\)</span>节律。 二者都起源于大脑的感觉运动皮层，因此命名为SMR。 感觉运动皮层是结合感觉和运动功能的皮层区域。这些节律的变化可能是感觉刺激，运动行为或精神影像的结果，并可能导致振幅抑制，事件相关的失步（ERD）或振幅增强，事件相关的同步（ERS）。</p><h2 id="bci评估方法">2.3 BCI评估方法</h2><p>为了比较不同BCI系统性能，需要评估方法；</p><h3 id="itr">1 ITR</h3><p><span class="math display">\[B=log_2N+Plog_2P+(1-P)log_2(\frac{1-P}{N-1})\]</span></p><p>B为比特率(bit/symbol),N是目标数，P是分类准确度。 <span class="math display">\[B_t = B \frac{60}{T}\]</span> <span class="math inline">\(B_t\)</span>单位(bits/min),T是检测速度（seconds/symbol）</p><h3 id="pbrpractical-bit-rate">2 PBR(practical bit rate)</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210426104846847.png"></p><p>P是分类准确度</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="脑机接口" scheme="https://1iuke.github.io/categories/%E8%84%91%E6%9C%BA%E6%8E%A5%E5%8F%A3/"/>
    
    
    <category term="BCI" scheme="https://1iuke.github.io/tags/BCI/"/>
    
  </entry>
  
  <entry>
    <title>An online multi-channel SSVEP-based brain–computer interface using a canonical correlation analysis method</title>
    <link href="https://1iuke.github.io/2021/04/22/Paper/SSVEP/%E5%9F%BA%E4%BA%8ECCA%E7%9A%84SSVEP%E7%9A%84%E5%9C%A8%E7%BA%BF%E5%A4%9A%E9%80%9A%E9%81%93%E8%84%91%E6%9C%BA%E6%8E%A5%E5%8F%A3/"/>
    <id>https://1iuke.github.io/2021/04/22/Paper/SSVEP/%E5%9F%BA%E4%BA%8ECCA%E7%9A%84SSVEP%E7%9A%84%E5%9C%A8%E7%BA%BF%E5%A4%9A%E9%80%9A%E9%81%93%E8%84%91%E6%9C%BA%E6%8E%A5%E5%8F%A3/</id>
    <published>2021-04-22T07:03:04.000Z</published>
    <updated>2021-08-26T08:19:01.003Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="总结">0. 总结</h2><ol type="1"><li>确定了枕区9个电极</li><li>CCA方法优于传统方法,PSDA</li><li>通过CCA最大化相关系数计算的空间滤波器时EEG信号的SNR提高</li></ol><h2 id="研究目标">1. 研究目标</h2><p>提高ITR</p><h2 id="研究背景及问题陈述">2. 研究背景及问题陈述</h2><p>SSVEP优点：高ITR，高SNR，训练少</p><p>SSVEP的许多特性（例如幅度，分布和可用频率范围）显示出很大的用户差异</p><p>传统的SSVEP检测技术无法识别以谐波频率闪烁的目标</p><h2 id="研究方法">3. 研究方法</h2><h3 id="cca">1 CCA</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210422152632770.png"></p><p>X是N个通道的EEG信号。<span class="math inline">\(Y_f\)</span>为参考信号。</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210422153544297.png"></p><p><span class="math inline">\(X,Y_f\)</span>作为CCA输入，输出相关性<span class="math inline">\(\rho\)</span>用来做频率识别</p><h3 id="离线实验">3.2 离线实验</h3><p>基于SSVEP的BCI有三个重要参数：通道位置，窗口长度，谐波数量</p><p>离线实验目的是研究这三个参数对BCI性能的影响</p><p>本实验有 六个目标，闪烁频率分别为13，14，15，16，17，18Hz，LED的亮度有方波调制</p><p>CCA用来指导通道选择和评估离线性能</p><p>频道选择后，保留了九个通道。</p><p>为了将CCA方法与传统的功率谱密度分析（PSDA）方法进行比较，对九通道EEG数据运行了两种方法。</p><p>在PSDA方法中，使用了穷举法来选择优化的双极引线，以最大化激励频率SNR。</p><p>然后将具有最大SNR的频率识别为BCI输出。</p><p>分类准确度用于评估该方法的性能。</p><p>还研究了时间窗长度对分类准确性的影响。</p><h3 id="在线实验">3.2 在线实验</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210422155726189.png"></p><p>六个目标，刺激频率15，12，10，8.6，7.5，6.7Hz，屏幕刷新率60Hz</p><p>一个闪烁周期分别有4 5 6 7 8 9 帧。</p><p>一个闪烁周期中一帧是白的，剩下的是黑的。</p><h2 id="结果">4. 结果</h2><h3 id="通道定位分析">4.1 通道定位分析</h3><p>功率头皮图显示视觉刺激在枕区有强烈反应。<strong>枕区</strong></p><p>这九个通道为 O1,O2,Oz,PO7,PO8,POz,P3,P4,Pz</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210422162532598.png"></p><h3 id="时间窗长度和谐波数">4.2 时间窗长度和谐波数</h3><p>（不同谐波数）识别准确率对比：CCA优于PSDA</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210422163958385.png"></p><p>ANOVA分析，不同窗口长度与不同谐波对准确率的影响。</p><p>与双极导联法相比，CCA提高了10%准确率。</p><p>谐波数没有明显的影响。</p><p>窗口长度有显著影响。窗口长为2s时，能获得所需的识别率</p><h3 id="在线结果">4.3 在线结果</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210422165310528.png"></p><h2 id="讨论">5. 讨论</h2><ol type="1"><li>CCA给出的权重矢量<span class="math inline">\(W_x\)</span>将<span class="math inline">\(ρ\)</span>最大化，可以提供一种空间模式，该模式可以改善组合后的EEG信号的SNR。</li><li>所提出的系统具有低的主体间可变性。</li><li>可以使用谐波频率作为刺激</li></ol><h2 id="笔记">6. 笔记</h2><h2 id="参考文献">参考文献</h2>]]></content>
    
    
    <summary type="html">基于典型相关分析方法的基于SSVEP的在线多通道脑机接口</summary>
    
    
    
    <category term="论文" scheme="https://1iuke.github.io/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="CCA" scheme="https://1iuke.github.io/tags/CCA/"/>
    
    <category term="SSVEP" scheme="https://1iuke.github.io/tags/SSVEP/"/>
    
  </entry>
  
  <entry>
    <title>A Novel c-VEP BCI Paradigm for Increasing the Number of Stimulus T argets Based on Grouping Modulation With Different Codes</title>
    <link href="https://1iuke.github.io/2021/04/15/Paper/C3.A%20Novel%20c-VEP%20BCI%20Paradigm%20for%20Increasing%20the%20Number%20of%20Stimulus%20T%20argets%20Based%20on%20Grouping%20Modulation%20With%20Different%20Codes/"/>
    <id>https://1iuke.github.io/2021/04/15/Paper/C3.A%20Novel%20c-VEP%20BCI%20Paradigm%20for%20Increasing%20the%20Number%20of%20Stimulus%20T%20argets%20Based%20on%20Grouping%20Modulation%20With%20Different%20Codes/</id>
    <published>2021-04-15T07:19:13.000Z</published>
    <updated>2021-05-13T01:51:38.759Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="总结">0. 总结</h2><p>通过分组进一步提高了target数</p><h2 id="研究目标">1. 研究目标</h2><p>提高c-VEP的ITR</p><h2 id="研究背景及问题陈述">2. 研究背景及问题陈述</h2><p>EEG由于非侵入性收到关注</p><p>基于VEP的BCI可以检测枕区和顶叶的信号。</p><blockquote><p>现有c-VEP BCI 系统中，有两种<code>目标调制方法</code>：</p></blockquote><table><thead><tr class="header"><th>比较</th><th style="text-align: left;">一个源伪随机码和他的循环移位码</th><th>不同的伪随机码</th></tr></thead><tbody><tr class="odd"><td>相同点</td><td style="text-align: left;">都将目标打包成一组呈现</td><td></td></tr><tr class="even"><td>优点</td><td style="text-align: left;">只需要训练一个目标（参考目标），创建模板训练时间短</td><td>目标数不受编码长度限制</td></tr><tr class="odd"><td>缺点</td><td style="text-align: left;">可用目标数受到编码长度的影响</td><td>需要为每个目标创建模板，训练时间长</td></tr></tbody></table><p>对于64bit码长，时间延迟为2bit，只能循环移位31次，只能编码32个target</p><blockquote><p>目标数目是影响BCI性能的一个重要参数。</p></blockquote><ol type="1"><li>一个高性能BCI通常以大量target</li><li>一些复杂应用(单词输入器)需要大量target</li></ol><blockquote><p>对<span class="math inline">\(f-VEP\)</span>,有许多方法提高目标数，</p></blockquote><ol type="1"><li>frequency and phase mixed coding</li><li>dual-frequency stimulation</li><li>multiple frequencies sequential coding</li></ol><blockquote><p>对于c-VEP,本文提出了一个 <code>分组分码调制方法</code>,所有刺激目标被打包为几个组中，并且每个组用不同的伪随机码和循环移位码调制。每组只需训练一个目标，大大减少训练时间。</p></blockquote><p>本文将48个target分为三组，结果显示本范式有助于<code>提高target数量和ITR</code></p><h2 id="研究方法">3. 研究方法</h2><h3 id="目标调制">3.1 目标调制</h3><p>视觉刺激器如下：</p><p>每组16个刺激为灰色，周围20个互补的非目标刺激。采用<code>等效邻域原则</code>.</p><p><strong>这些非目标刺激的目的是确保目标刺激在左，右，上，下和对角线的方向上具有相等的邻居</strong></p><p>分组是target增多，使用第一种方法训练较少训练时间</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210416111052828.png"></p><p>为了更好区分不同编码，<code>编码之间应正交或近似正交。</code></p><p>三组需要三个伪随机码，每组一个。拥有良好的自相关性，每组16个目标近似正交</p><p>不同原始码互相关，不同组之间近似正交</p><p>任何满足正交性要求的编码都可用作调制源码（例如：Golden codes)</p><blockquote><p><strong>编码选择</strong></p></blockquote><p><code>伪随机M序列</code>具有良好的自相关特性，这使得可以创建相同M序列的一组循环移位。因此，一组循环移位序列表现出良好的互相关特性，并且可以用于调制单个刺激组。</p><p>然而，不同的M序列不能保证良好的互相关性,不能用于调节多组刺激。</p><p>本文采用一对<code>Golay互补序列</code>和 <code>几乎完美自相关序列(APA)</code>作为三组刺激的源调制编码。他们有优秀的自相关和互相关性。原则上确保了由三个调制码及其循环移位码激励的不同目标的刺激信号之间的正交性。</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210416153704652.png"></p><p>屏幕刷新率60Hz，码长64bit，刺激周期64/60=1.066s。</p><h3 id="目标识别">3.2 目标识别</h3><p>目标识别分为训练阶段和测试阶段，训练阶段用于创建模板，测试阶段将测试信号与三组的模板计算，选择相关系数最大的为目标。</p><p>为了提取更多信息，通常记录多个通道脑电数据。然而模板匹配是两个一维向量的比较。所以需要空域滤波将多维信号压缩到一维。</p><p>本研究使用CCA降维。</p><blockquote><p><a href="/2021/03/14/深度学习/典型相关分析(CCA)">典型相关分析 CCA</a></p></blockquote><p>CCA是一种多变量相关性分析方法，可发现两个多维数据集之间的潜在相关性。它为两个数据集创建一对线性组合，从而使两个组合之间的相关性最大化</p><p>X,Y为两个多维信号，x,y为canonical 变量。 <span class="math inline">\(x=X^TW_x\)</span>, <span class="math inline">\(y=Y^TW_y\)</span></p><p><span class="math inline">\(W_x,W_y\)</span> 可通过最大化x,y的相关系数<span class="math inline">\(\rho\)</span> 计算：</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210416153640465.png"></p><blockquote><p>模板创建</p></blockquote><p>对第i组，选取目标r作为参考，被试通过注意参考目标N个刺激周期，获得原始数据。</p><p>该数据采集C个电极信息。先对2-30Hz信号时域滤波。然后分段（周期），中心化（减去均值）。得到数据<span class="math inline">\(X_r^n(t),,n=1,2,...N\)</span>.<span class="math inline">\(X_r^n(t)\in R^{C\times L}\)</span>.<span class="math inline">\(L\)</span>是采样点。</p><p>本文中，<span class="math inline">\(r=11\)</span>, <span class="math inline">\(C=9\)</span>, <span class="math inline">\(N=200\)</span>. 码长<span class="math inline">\(lc=64bits\)</span>, 屏幕刷新率<span class="math inline">\(fr=60Hz\)</span>, 采样率<span class="math inline">\(fs=1000Hz\)</span>,</p><p>所以<span class="math inline">\(L=floor(lc/fr.fs)=1066\)</span>.</p><p>通过平均<span class="math inline">\(X_r^n(t)\)</span> 得到<span class="math inline">\(ERP\)</span> <span class="math inline">\(\overline{S}_r(t)\in R^{C\times L}\)</span></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210416160806928.png"></p><p><span class="math inline">\(S_r(t)=[\overline{S}_r(t),\overline{S}_r(t),...,\overline{S}_r(t)]\)</span>, 复制N次</p><p><span class="math inline">\(X_r(t)=[X_r^1(t),X_r^2(t),...X_r^N(t)]\)</span>, 拼接N个周期数据</p><p><span class="math inline">\(S_r(t)和X_r(t)\)</span> 由 <span class="math inline">\(C\times N\times L\)</span>转化为 <span class="math inline">\(C\times (N.L)\)</span> 矩阵。</p><p>作为CCA输入，得到第i组的<span class="math inline">\(C\times 1\)</span> 的空间滤波器<span class="math inline">\(w_{xi}\)</span></p><p>然后通过<span class="math inline">\(T_{ir}(t)=w_{xi}^T.\overline{S}_r(t)\)</span>得到一维模板矢量</p><p>所有目标的模板可通过循环移位获得 <span class="math display">\[T_{ik}(t)=T_{ir}(t-b_s(\tau_k-\tau_r))  ,k=1,2,...16\]</span> 其中 k是目标数，<span class="math inline">\(b_s=4\)</span> 是移位比特数。</p><p><span class="math inline">\(\tau_k-\tau_r=(k-r).fs/fr\)</span></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210416163334043.png"></p><blockquote><p>模板匹配</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210416163523150.png"></p><p>与训练阶段相同，滤波，中心化，CCA得到<span class="math inline">\(y_i(t)=w_{xi}^T.Y(t)\)</span> .</p><p>计算皮尔逊相关</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210416163936203.png"></p><p>选取每组的最大值</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210416164006759.png"></p><p>三个最大值中的最大值几位注视目标</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210416164053461.png"></p><h2 id="评估实验">4. 评估，实验</h2><h3 id="数据获取">数据获取</h3><p>该实验包括离线和模拟在线实验，以三个月的间隔进行，每个实验包括一个训练阶段和一个测试阶段。20个健康受试者参加实验（8名女性），年龄21-26，平均23岁。10人参加离线实验，8人参加在线实验，2人参加两个实验。</p><p>记录枕区的P3,Pz, P4,PO7,POz,PO8,O1, Oz, O2九个电极，参考电极在顶部。电极阻抗保持在10 k以下。脑电数据以1000 Hz的采样率数字化。</p><h4 id="离线实验">1 离线实验</h4><p>收集训练数据创建模板。每组第11个目标作为参考。记录200个刺激周期数据。</p><h4 id="模拟在线实验">2 模拟在线实验</h4><p>模拟的在线实验与离线实验相同，不同之处在于，三个参考目标中的每一个仅连续进行了100个刺激周期而不是200个刺激周期，因为对离线实验的数据分析表明，训练量数据足以产生用于目标刺激的准确模板。</p><h2 id="结论">5. 结论</h2><h3 id="c-vep信号的自相关和互相关">1 c-VEP信号的自相关和互相关</h3><p>三个参考模板的自相关和互相关图</p><p>第一行自相关函数，中心峰与最大旁瓣之比足够大，可以确保在单个组中准确区分不同目标</p><p>第二行互相关函数，与自相关函数的中心峰相比，互相关函数在所有时间滞后都具有较小的值，可以区分不同目标</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210416165754847.png"></p><p><strong>注意</strong>，尽管目标刺激都作为二进制信号不相关，但这并不意味着对这些刺激的响应也不相关，因为大脑是一个非线性的动力系统。</p><h3 id="分类准确率">2 分类准确率</h3><p>分类准确度定义为正确分类的试验次数与试验总数之比。 表II报告了离线测试中单个组中所有刺激的分类准确度以及整个刺激组中所有三组（w组）的分类准确度。</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210416165155231.png"></p><p>第2组准确率最高，可能是刺激位于PC的屏幕中心，并且引起c-VEP信号幅度大于第1组和第3组中的刺激。</p><p>准确率降低可能是由于目标数量急剧增加（从16到48）引起的，因为目标识别的难度增加了。</p><h3 id="混淆矩阵">3 混淆矩阵</h3><p>可以看出，这些目标的分类精度较高，并且这些目标之间的准确性没有明显差异。 从矩阵中可以看出，目标6最经常与目标7混淆。但是，大多数目标与周围目标（包括四个边和四个对角线的目标）混淆了（见图1）。这种现象可能源于附近刺激物对目标刺激物的干扰。</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210416175115623.png"></p><p>图b显示了单组受试者之间目标识别的平均混淆矩阵。</p><p>显然，每组的分类准确性很高，并且各组之间的准确性几乎没有差异。</p><p>组之间精度的良好平衡可能归因于三个调制序列的良好自相关和互相关特性。</p><p>每个组最常与相邻的组混淆。这种现象也可能是由于<code>附近群体的刺激干扰目标所致</code></p><h3 id="目标识别的数据长度">4 目标识别的数据长度</h3><p>分类精度和ITR用来评估该范式的性能</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210416181053928.png"></p><p>M是目标数，P是检测精度，T是目标选择时间</p><figure><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210416181254026.png" alt="图5.平均精确度和平均ITR"><figcaption aria-hidden="true"><strong>图5.平均精确度和平均ITR</strong></figcaption></figure><h3 id="训练次数">5 训练次数</h3><p>100次后精度几乎不变。因此，在模拟的在线实验中，为了节省培训时间，每组的参考目标参加了100次试验。</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210416182129371.png"></p><h3 id="模拟在线实验-1">6 模拟在线实验</h3><p>对于大多数受试者，单个刺激组的准确性高于w组</p><p>刺激数量有16提速到48，准确率小幅下降的同时，大大提高了ITRs</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/bloglk/image/raw/master/image/image-20210416182417845.png"></p><h2 id="笔记">6. 笔记</h2><ol type="1"><li><p>伪随机M序列具有良好的自相关特性，可以用于调制单个刺激组。 然而，不同的M序列不能保证良好的互相关性。因此，它们不能用于调节多组刺激。 为了解决该问题，选择了一对Golay互补序列和几乎完美的自相关序列，以调制c-VEP BCI范式中的三组刺激。 它们表现出良好的自相关和良好的互相关，并且原则上确保了由三个调制码及其循环移位码激励的不同目标的刺激信号之间的正交性</p></li><li><p>为了将所有48个刺激目标在有限的区域内排列在监视器上，使用等效邻居的原理来设计视觉刺激器。 单个组中的十六个刺激紧密放置在一起以节省屏幕空间。 有了互补的非目标刺激，每个目标刺激和所有邻居都会保持固定时滞的关系。 由于中央凹视野之外的刺激也可能有助于VEP ，因此该原理利用了对目标及其邻居的诱发反应。 但这是在以下基础上建立的：<code>从人眼到所有目标的中心点的视角是相同的，并且等于在训练阶段用于模板数据获取的从人眼到参考目标的中心点的视角</code>。 在实践中，很难做到这一点，特别是对于具有大量目标刺激的视觉刺激器而言。 <code>结果</code>，由邻近刺激引起的诱发反应并不是一种有用的信号，而是一种噪声干扰。</p></li><li><p><strong>v-vep vs f-vep</strong></p><p>在常规的c-VEP BCI中，一组刺激是由原始的伪随机二进制代码及其循环移位代码调制的。 因此，所有刺激共享相同的调制码，但是具有不同的相位。</p><p>在频率编码f-VEP BCI中，一组刺激由不同频率的方波信号调制。为了在计算机屏幕上呈现视觉刺激，实际上将单频方波信号编码为周期性二进制代码。 因此，所有刺激具有不同的周期代码，但共享相同的一个相位（零相位）。</p><p>两者不同之处在于：</p><ul><li>前者使用相同二进制码，相位不同。</li><li>后者使用不同周期码，相位相同</li><li>前者中的大量目标可以通过少量的伪随机码和大量相位进行调制，</li><li>后者中的目标可以通过大量的周期码和少量的相位进行调制。</li></ul><p>​</p></li></ol><h2 id="文章传送">文章传送</h2><p><a href="\2021\04\15\Paper\A%20multi-target%20brain-computer%20interface%20based%20on%20code%20modulated%20visual%20evoked%20potentials">基于编码调制视觉诱发电位的多目标脑机接口</a></p><p><a href="/2021/03/15/Paper/2.基于编码调制VEP的高速BCI">基于编码调制VEP的高速BCI</a></p><h2 id="参考文献">参考文献</h2>]]></content>
    
    
    <summary type="html">基于不同代码分组调制的增加刺激目标数目的新型c-VEP脑机接口范式</summary>
    
    
    
    <category term="论文" scheme="https://1iuke.github.io/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="c-VEP" scheme="https://1iuke.github.io/tags/c-VEP/"/>
    
    <category term="CCA" scheme="https://1iuke.github.io/tags/CCA/"/>
    
  </entry>
  
</feed>
